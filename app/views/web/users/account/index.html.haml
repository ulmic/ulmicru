- title
.container.mic-form-container.account-form
  %h3.title
    = t('.title')
  - if @user.is_member? && !@user.unavailable?
    - if @user.member_unviewed?
      %span.label.warning
        = t('.your_member_profile_is_unviewed')
    = simple_form_for @member_form, url: { controller: 'web/users/account', action: :update, id: @user.id } do |f|
      = f.input :first_name, as: :string
      = f.input :patronymic, as: :string
      = f.input :last_name, as: :string
      = f.input :email, as: :string
      = f.input :motto, as: :string
      = f.input :ticket, as: :string
      = f.input :mobile_phone, as: :string
      = f.input :birth_date, as: :date_picker
      = f.input :home_adress, as: :string
      = f.input :municipality
      = f.input :locality, as: :grouped_select, collection: Localities.list_hash, group_method: :last
      = f.input :school, as: :grouped_select, collection: Schools.list_hash, group_method: :last, input_html: { class: :select2 }
      = f.label :avatar
      .preview
        = image_tag @member_form.model.avatar if @member_form.model.avatar.present?
      = f.input :avatar, as: :file, label: false, input_html: { style: 'display: none' }
      = f.input :avatar, label: false, as: :jasny_file_preview_upload_foundation
      = f.association :teams, input_html: { class: :select2 }, collection: teams_hash(@teams)
      %hr
      %h4
        = t('.my_position_in_mic')
      = f.hint t('hints.position.fill_position_for_resume')
      = f.simple_fields_for :positions do |position_form|
        = render 'position_fields', f: position_form
      = link_to_add_association t('.add_position'), f, :positions, data: { 'association-insertion-node' => 'this' }, class: 'button success add_fields'
      %br
      = f.button :submit, t('helpers.links.save'), class: 'btn-success'
      = link_to t('helpers.links.back'), root_path, class: 'button'
    %br
    -#- attributes_need_access.each do |attribute|
      = check_box_tag attribute, '', false, class: 'attribute_access', data: { id: @user.id  }
  - else
    - if @user.unviewed?
      %span.label.warning
        = t('.we_have_send_you_activation_email')
    = simple_form_for @user, url: { controller: 'web/users/account', action: :update, id: @user.id } do |f|
      = f.input :first_name, as: :string
      = f.input :last_name, as: :string
      - unless @user.email.present?
        = f.hint t('notifications.web.users.account.email.empty')
      = f.input :email, as: :string, required: true
      = f.button :submit, t('helpers.links.save')
    - if !@user.is_member? || (@user.is_member? && @user.unavailable?)
      - if @user.is_questionary?
        %span.label
          = t('.you_want_to_join_mic')
      - else
        .actions
          .row
            .medium-4.columns
              = t('.you_are_member_mic')
            .medium-4.medium-offset-1.columns.end
              = link_to t('.enter_datas_mic_member'), new_member_path, class: 'button'
          - unless @user.is_member?
            .row
              .medium-4.columns
                = t('.you_are_not_member_mic')
              .medium-4.medium-offset-1.columns.end
                = link_to t('organization.send_request'), new_join_path, class: 'button'
          - if @user.state == "unviewed"
            .row
              .medium-4.columns
                = t('.if_email_was_not_delivered')
              .medium-4.medium-offset-1.columns.end
                = link_to t('.resent_email_instructions'), resent_email_instructions_api_user_url(@user, :token => @user.token), class: 'button'
  .row-fluid.authentications
    %h3
      = t('.authentications')
    = t('.you_can_auth_with_social_networks')
    %br
    .table
      .row{ style: 'border-bottom: none' }
        .small-2.small-offset-5.end
          = t('.enable_in_profile_page')
      - @authentications.each do |auth|
        .row
          .small-2.columns
            %span{ class: social_network_icon(auth.provider, :big, :colored) }
          .small-2.columns
            = link_to t('helpers.links.destroy'), users_authentication_path(auth), method: :delete, class: 'button alert'
          .small-2.small-offset-1.columns.end
            = check_box_tag auth.provider, 'yes', attribute_access(auth.provider, @user), class: 'attribute_access', data: { id: @user.id }

      - not_linked_social_networks(@authentications).each do |network|
        .row
          .small-2.columns
            %span{ class: social_network_icon(network, :big, :colored) }
          .small-2.columns.end
            = link_to t('helpers.links.auth'), auth_path(network), class: 'button'
  - unless @user.role.user?
    .row-fluid
      %h3
        = t('.admin_panel')
      %br
      .row
        .small-4.columns
          = t('.your_role_is', role: @user.role.text)
          %br
          = t('.you_have_access_to_admin_panel')
        .small-4.small-offset-1.columns.end
          = link_to t('.admin_panel'), admin_path, class: 'button'
