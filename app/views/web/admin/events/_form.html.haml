- current_title = page_title(action, Event.model_name.human)

- title current_title, :admin
.page-header
  %h1= page_title(action, Event.model_name.human)
  - if @event_form.model.creator.present?
    = link_to "Автор: #{@event_form.model.creator.decorate.short_name}", member_path(@event_form.model.creator.ticket), class: :blank
  - else
    .alert.alert-dissmissible.alert-info
      %span.glyphicon.glyphicon-info-sign
      = t('messages.events.enter_organizers_also')
.row
  .col-lg-12
    = render 'layouts/web/admin/shared/messages', object: @event_form
.row
  .col-lg-12
    = simple_form_for [:admin, @event_form], input_html: { class: 'form-horizontal' } do |f|
      = f.button :submit, t('helpers.links.save'), class: 'btn-success'
      = link_to t('helpers.links.back'), events_path, class: 'btn btn-default'
      = f.input :title, as: :string
      = f.input :description, as: :ckeditor
      = f.label :main_photo
      .preview
        = image_tag @event_form.model.main_photo if @event_form.model.main_photo.present?
      = f.input :main_photo, as: :file, label: false, input_html: { style: 'display: none' }
      = f.input :main_photo, label: false, as: :jasny_file_preview_upload
      = f.input :begin_date, as: :datetime_picker
      = f.input :end_date, as: :datetime_picker
      - if current_user.role.admin?
        = f.input :state, as: :hidden, input_html: { value: :confirmed }
      - else
        = f.input :state, as: :hidden, input_html: { value: :unviewed }
      %hr
      = hint :event, :place, place: :admin
      %br
      = f.label :place
      .form-group.text.required
        .input-group
          - if @event_form.model.place.present?
            = text_field :place, '', class: 'text required form-control', value: @event_form.model.decorate.place_name
          - else
            = text_field :place, '', class: 'text required form-control'
          %span.input-group-btn
            %button.btn.btn-default#update_list
              %span.glyphicon.glyphicon-search
      = f.input :place, as: :select, collection: [], label: false, input_html: { value: @event_form.model.place }
      = f.input :place, as: :hidden, input_html: { value: @event_form.model.place }
      .alert.alert-dissmissible.alert-info
        %span.glyphicon.glyphicon-info-sign
        = t('.did_not_find_anything_add_venue')
      %br
      = link_to t('.add_venue'), '#', class: 'btn btn-default show_popup', data: { popup_id: :place_form }
      %hr
      = f.input :organizer_type, collection: organizer_types
      = f.input :organizer_id, as: :select, input_html: { data: { collection: teams_and_members_hash(@teams, @members), selected_id: @event_form.model.organizer_id }, class: :select2 }
      - if @event_form.creator_id.present?
        = f.input :creator_id, as: :hidden
      - else
        = f.input :creator_id, as: :hidden, input_html: { value: current_user.id }
      = f.association :activity_line, label_method: lambda { |activity_line| "#{I18n.t("enumerize.activity_line.activity_type.#{activity_line.activity_type}")} «#{activity_line.title}»" }, value_method: :id
      .registrations.nested
        %h3
          = t('.registrations')
        -# FIXME @event_form.model.registrations.any? == true && @event_form.model.registrations.count == 0
        - if @event_form.model.registrations.count > 0
          = f.simple_fields_for :registrations do |reg_form|
            = render 'registration_fields', f: reg_form
        = link_to_add_association t('.add_registration'), f, :registrations, data: { 'association-insertion-node' => 'this' }, class: 'btn btn-warning add_fields'
      = f.button :submit, t('helpers.links.save'), class: 'btn-success'
      = link_to t('helpers.links.back'), events_path, class: 'btn btn-default'
.popup#place_form
  = render 'layouts/web/admin/shared/places/form'
