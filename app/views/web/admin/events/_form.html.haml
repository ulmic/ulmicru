- current_title = page_title(action, Event.model_name.human)

- title current_title, :admin
.page-header
  %h1= page_title(action, Event.model_name.human)
  - if @event_form.model.creator.present?
    - if @event_form.model.creator.is_member?
      = link_to "Автор: #{@event_form.model.creator.decorate.short_name}", admin_member_path(@event_form.model.creator), class: :blank
    - else
      = link_to "Автор: #{@event_form.model.creator.decorate.short_name}", admin_questionary_path(@event_form.model.creator), class: :blank
  - else
    .alert.alert-dissmissible.alert-info
      %span.glyphicon.glyphicon-info-sign
      = t('messages.events.enter_organizers_also')
.row
  .col-lg-12
    = render 'layouts/web/admin/shared/messages', object: @event_form
.row
  .col-lg-12
    = simple_form_for [:admin, @event_form], input_html: { class: 'form-horizontal' } do |f|
      = f.button :submit, t('helpers.links.save'), class: 'btn-success'
      = link_to t('helpers.links.back'), admin_events_path, class: 'btn btn-default'
      - if @event_form.model.is_online_conference?
        = f.input :title, as: :string, disabled: true
        = f.input :title, as: :hidden
      - else
        = f.input :title, as: :string
      = f.input :description, as: :ckeditor
      = f.label :main_photo
      = link_to fa_icon(:link), new_redirect_rule_by_photo_path(@event_form.main_photo), class: 'btn btn-xs btn-success'
      .preview
        = image_tag @event_form.model.main_photo if @event_form.model.main_photo.present?
      = f.input :main_photo, as: :file, label: false, input_html: { style: 'display: none' }
      = f.input :main_photo, label: false, as: :jasny_file_preview_upload
      = f.input :begin_date, as: :datetime_picker
      = f.input :end_date, as: :datetime_picker
      - if current_user.has_permission_to? :review, :event
        = f.input :state_event, as: :state_event, input_html: { value: :confirm }
      - else
        - if @event_form.model.created_at.present?
          = f.input :state, as: :hidden, input_html: { value: :updated }
        - else
          = f.input :state, as: :hidden, input_html: { value: :unviewed }
      = f.association :places, label_method: :title, value_method: :id, input_html: { class: :select2 }
      = hint :event, :places, place: :admin
      = react_component 'PlaceField'
      %hr
      = f.input :organizer_type, collection: organizer_types
      = f.input :organizer_id, as: :select, input_html: { data: { collection: teams_and_members_hash(@teams, @members), selected_id: @event_form.model.organizer_id }, class: :select2 }
      - if @event_form.creator_id.present?
        = f.input :creator_id, as: :hidden
      - else
        = f.input :creator_id, as: :hidden, input_html: { value: current_user.id }
      = f.association :activity_line, label_method: lambda { |activity_line| "#{I18n.t("enumerize.activity_line.activity_type.#{activity_line.activity_type}")} «#{activity_line.title}»" }, value_method: :id
      .registrations.nested
        %h3
          = t('.registrations')
        -# FIXME @event_form.model.registrations.any? == true && @event_form.model.registrations.count == 0
        - if @event_form.model.registrations.count > 0
          = f.simple_fields_for :registrations do |reg_form|
            = render 'registration_fields', f: reg_form
        = link_to_add_association t('.add_registration'), f, :registrations, data: { 'association-insertion-node' => 'this' }, class: 'btn btn-warning add_fields'
      = f.button :submit, t('helpers.links.save'), class: 'btn-success'
      = link_to t('helpers.links.back'), admin_events_path, class: 'btn btn-default'
