n
@response.to_s
@response.to-s
@response.class
@responce.class
q
args
s
render @responce
@response
q
@exception.message
print @exception.backtrace.first(30).join("\n")
print @exception.backtrace.first(30).join('\n')
print @exception.backtrace.first(30).join('\\n')
puts @exception.backtrace.first(30).join('\\n')
@exception.backtrace.first(30).join('\\n')
@exception.backtrace.first(30).join('\n')
@exception.backtrace.first(30)
@exception.backtrace.first(3)
@exception.backtrace
@exception.class.name
@exception.name
@exception.class.name
@exception.class
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq
ap ActionDispatch::ExceptionWrapper.rescue_responses[404]
ap ActionDispatch::ExceptionWrapper.rescue_responses[504]
ap ActionDispatch::ExceptionWrapper.rescue_responses[502]
ap ActionDispatch::ExceptionWrapper.rescue_responses[301]
ap ActionDispatch::ExceptionWrapper.rescue_responses[421]
ap ActionDispatch::ExceptionWrapper.rescue_responses[422]
ap ActionDispatch::ExceptionWrapper.rescue_responses
@respons
@responce
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq
ap ActionDispatch::ExceptionWrapper.rescue_responses.map {|k,v}
ActionDispatch::ExceptionWrapper.new(env, @exception).exception
ActionDispatch::ExceptionWrapper.new(env, @exception)
ap ActionDispatch::ExceptionWrapper.new(env, @exception)
ActionDispatch::ExceptionWrapper.new(env, @exception)
Rails.env.class
Rails.env
@exception
q
c
n
@response
list 15
list 12
list 20
list 100
list 10
list 1..2
list 1
list 0
list -1
help
list
@responce
q
@exception
@status
@exception
q
ap env
env
env['action_dispatch.exception']
env['action_dispatch.excpetion']
env['action_dispatch']
@exception.name
@exception.message
@exception
q
ap ActionDispatch::ExceptionWrapper.rescue_responses.map {|k,v}
ap ActionDispatch::ExceptionWrapper.rescue_responses
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq.join
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq.join(',')
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq.join
ap ActionDispatch::ExceptionWrapper.rescue_responses.values.uniq
ap ActionDispatch::ExceptionWrapper.rescue_responses.values
ap ActionDispatch::ExceptionWrapper.rescue_responses
ActionDispatch::ExceptionWrapper.rescue_responses
@response
continue
ap @exception
@exception
@status
q
ap params
q
params
exception
ap params
